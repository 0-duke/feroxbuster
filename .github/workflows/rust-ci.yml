name: CI Pipeline

on: [push]

jobs:
#  check:
#    name: Check
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#      - uses: actions-rs/cargo@v1
#        with:
#          command: check
#
#  test:
#    name: Test Suite
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#      - uses: actions-rs/cargo@v1
#        with:
#          command: test
#
#  fmt:
#    name: Rust fmt
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#      - run: rustup component add rustfmt
#      - uses: actions-rs/cargo@v1
#        with:
#          command: fmt
#          args: --all -- --check
#
#  clippy:
#    name: Clippy
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#      - run: rustup component add clippy
#      - uses: actions-rs/cargo@v1
#        with:
#          command: clippy
#          args: --all-targets --all-features -- -D warnings -A clippy::unnecessary_unwrap


  build-nix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        type: [ubuntu-x64, ubuntu-x86]
        include:
          - type: ubuntu-x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: x86_64-linux-feroxbuster
            path: target/x86_64-unknown-linux-musl/release/feroxbuster
            pkg_config_path: /usr/lib/x86_64-linux-gnu/pkgconfig
          - type: ubuntu-x86
            os: ubuntu-latest
            target: i686-unknown-linux-musl
            name: x86-linux-feroxbuster
            path: target/i686-unknown-linux-musl/release/feroxbuster
            pkg_config_path: /usr/lib/i686-linux-gnu/pkgconfig
    steps:
      - uses: actions/checkout@v2
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libssl-dev pkg-config
          sudo apt-get clean -y
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          PKG_CONFIG_PATH: ${{ matrix.pkg_config_path }}
          OPENSSL_DIR: /usr/lib/ssl
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.path }}

#  build-rest:
#    runs-on: ${{ matrix.os }}
#    if: github.ref == 'refs/heads/master-not-a-thing-revert-this-later-before-release'
#    strategy:
#      matrix:
#        type: [windows-x64, windows-x86, macos]
#        include:
#          - type: macos
#            os: macos-latest
#            target: x86_64-apple-darwin
#            name: x86_64-macos-feroxbuster
#            path: target/x86_64-apple-darwin/release/feroxbuster
#          - type: windows-x64
#            os: windows-latest
#            target: x86_64-pc-windows-msvc
#            name: x86_64-windows-feroxbuster.exe
#            path: target\x86_64-pc-windows-msvc\release\feroxbuster.exe
#          - type: windows-x86
#            os: windows-latest
#            target: i686-pc-windows-msvc
#            name: x86-windows-feroxbuster.exe
#            path: target\i686-pc-windows-msvc\release\feroxbuster.exe
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          target: ${{ matrix.target }}
#          override: true
#      - uses: actions-rs/cargo@v1
#        with:
#          use-cross: true
#          command: build
#          args: --release --target=${{ matrix.target }}
#      - uses: actions/upload-artifact@v2
#        with:
#          name: ${{ matrix.name }}
#          path: ${{ matrix.path }}
